"""Delete Emissions Entity

Revision ID: 666bff8e966d
Revises: e1a9d23b7899
Create Date: 2024-07-18 16:36:46.360436

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '666bff8e966d'
down_revision: Union[str, None] = 'e1a9d23b7899'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_carbon_emissions_country', table_name='carbon_emissions')
    op.drop_index('ix_carbon_emissions_id', table_name='carbon_emissions')
    op.drop_table('carbon_emissions')
    op.add_column('users', sa.Column('country_name', sa.String(), nullable=False))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.drop_index('ix_users_country', table_name='users')
    op.create_index(op.f('ix_users_country_name'), 'users', ['country_name'], unique=True)
    op.drop_column('users', 'country')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_users_country_name'), table_name='users')
    op.create_index('ix_users_country', 'users', ['country'], unique=True)
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'country_name')
    op.create_table('carbon_emissions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('emissions', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('emissions_change', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='carbon_emissions_pkey')
    )
    op.create_index('ix_carbon_emissions_id', 'carbon_emissions', ['id'], unique=False)
    op.create_index('ix_carbon_emissions_country', 'carbon_emissions', ['country'], unique=False)
    # ### end Alembic commands ###
